library(chMorals)#
library(chutils)#
library(stringr)#
#
cleanOverlapFile <- FALSE#
#
#set up the new RT variables#
fitCol <- "fit.RT"#
resCol <- "res.RT"#
#
# read in parameters#
params<-ch.readMoralsDBfile("costDBfile.txt")#
#
#set up the group and item directories#
mainDir <- getwd()#
ch.newDir (mainDir, params$gpSubDir)#
gpDir <- getwd()#
setwd(mainDir)#
#
ch.newDir (mainDir, params$itemSubDir)#
itemDir <- getwd()#
setwd(mainDir)#
### read in data#
data.raw <-read.table(params$moralsTaskDataFile, header=T, sep="\t", quote="\"")#
#
data.ovrlp <-read.table(params$valueOverlapDataFile, header=T, sep="\t", quote="\"")#
#
######_____REMOVE PRACTICE TRIALS _____#######
data.raw <- data.raw[data.raw$trial_type >=1, ]#
#
### do Prep analysis#
processedData <- ch.moralsDataPrep(data.raw, "sn", "keybRT", "overlap", "direction", "trial", "keyDef", respChoiceVal = c("No", "Yes"), item1cols = c("IA.1"), item2cols = c("IB.1"), overlapItem1cols = c("IA1"), overlapItem2cols = c("IB1"), params )
head(data.raw)
sn <- unique(data.raw$sn)
sn
xx <- data.raw[data.raw$sn=="1002_40605_911915936", ]
xx$trial
statsOutputFile <- file.path(mainDir,paste(params$dt.set, params$statsOutputFilePrefix))#
sink(statsOutputFile, append = F)#
  cat("\n***** New Run ****\n\n")#
sink(NULL)
processedData <- ch.moralsDataPrep(data.raw, "sn", "keybRT", "overlap", "direction", "trial", "keyDef", respChoiceVal = c("No", "Yes"), item1cols = c("IA.1"), item2cols = c("IB.1"), overlapItem1cols = c("IA1"), overlapItem2cols = c("IB1"), statsOutputFile = statsOutputFile, params = params )
xx <- processedData[processedData $sn=="1002_40605_911915936", ]
xx$trial
xx[xx$trial == 36,]
dat.over <-read.table(params$valueOverlapDataFile, sep="\t", header=T, quote="\"")
head(dat.over)
dat.over[dat.over$IA1=="a raincoat" & dat.over$IB1=="a car", ]
dat.over[dat.over$IB1=="a raincoat" & dat.over$IA1=="a car", ]
library(chValues)#
#
params <- ch.readValuessDBfile("valuesDBfile.txt")#
### read in data#
#
overlapFileName <- "../../FinalCombinedValuesDataClean.txt"#
data.ovrlp <-read.table(params$valuesTaskDataFile, header=T, sep="\t", quote="\"")
unloadNamespace("chValues")#
ch.updateRpackage (packageName = "chValues")
head(data.ovrlp)#
#data.2 <- ch.filterValuesData(data.raw, "sn", "prompt", "respS", "respTime",params)#
overlaps <- ch.valuesBootstrapOverlaps(data.ovrlp, "respS", "prompt", params, allItems = F)
overlaps <- ch.valuesBootstrapOverlaps(data.ovrlp, "respS", "prompt", params, allItems = F, multicore=T)
?complete
itemSet <-read.table("costProbes.txt", header=F, sep="\t", quote="\"")
itemSet <- itemSet[,1]#
  itemSet <- factor(itemSet)#
  numItems <- length(itemSet)#
#
  #make all the prompts as similar as possible#
    itemSet <- tolower(trimws(itemSet))#
    #remove duplicates#
    itemSet <- unique(itemSet)
itemSet
na.omit(itemSet)
unloadNamespace("chValues")#
ch.updateRpackage (packageName = "chValues")
overlaps <- ch.valuesBootstrapOverlaps(data.ovrlp, "respS", "prompt", params, allItems = F, multicore=T)
unloadNamespace("chValues")#
ch.updateRpackage (packageName = "chValues")
unloadNamespace("chValues")#
ch.updateRpackage (packageName = "chValues")
overlaps <- ch.valuesBootstrapOverlaps(data.ovrlp, "respS", "prompt", params, allItems = F, multicore=T)
source("costDataPrep.r")
source("costDataPrep.r")
grpFitModels <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.sn, c("yourItem"), resCol, "overlapRound", "keyDef", yesNoVal = c("No", "Yes"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = params$minOverlapN)#
     ### and plot the data#
     setwd(gpDir)#
     ch.moralsPlotFitsByGrps(grpFitModels, c("yourItem"), "overlapRound", analysisReadyData.sn, filenameID = params$dt.set)#
#
setwd(mainDir)
grpFitModels <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.sn, c("yourItem"), resCol, "overlapRound", "keyDef", yesNoVal = c("No", "Yes"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = params$minOverlapN)
params$minOverlapN
grpFitModels <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.sn, c("yourItem"), resCol, "overlapRound", "keyDef", yesNoVal = c("No", "Yes"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = 0)
grpFitModels <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.sn, c("yourItem"), resCol, "overlapRound", "keyDef", yesNoVal = c("No", "Yes"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = 0)#
     ### and plot the data#
     setwd(gpDir)#
     ch.moralsPlotFitsByGrps(grpFitModels, c("yourItem"), "overlapRound", analysisReadyData.sn, filenameID = params$dt.set)#
#
setwd(mainDir)
source("peopleVarNumDataPrep.r")
grpFitModels.2 <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.gp, c("HVOq", "LVOq"), resCol, "overlapRound", "keyDef", yesNoVal = c("Yes", "No"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = params$minOverlapN)
grpFitModels.2 <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.gp, c("HVOq", "LVOq"), resCol, "overlapRound", "keyDef", yesNoVal = c("Yes", "No"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = 0)
grpFitModels <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.gp, c("QuantOption1", "QuantOption2"), resCol, "overlapRound", "keyDef", yesNoVal = c("Yes", "No"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = params$minOverlapN)#
    #### this one is by side#
    grpFitModels.2 <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.gp, c("HVOq", "LVOq"), resCol, "overlapRound", "keyDef", yesNoVal = c("Yes", "No"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = 0)#
    ### and plot the data#
    setwd(gpDir)#
    ch.moralsPlotFitsByGrps(grpFitModels, c("QuantOption1", "QuantOption2"), "overlapRound", analysisReadyData.gp, filenameID = params$dt.set)#
    ch.moralsPlotFitsByGrps(grpFitModels.2, c("HVOq", "LVOq"), "overlapRound", analysisReadyData.gp, filenameID = params$dt.set)#
    setwd(mainDir)
grpFitModels <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.gp, c("QuantOption1", "QuantOption2"), resCol, "overlapRound", "keyDef", yesNoVal = c("Yes", "No"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = 0)#
    #### this one is by side#
    grpFitModels.2 <- ch.moralsPlotsByGrpsAndGetModels(analysisReadyData.gp, c("HVOq", "LVOq"), resCol, "overlapRound", "keyDef", yesNoVal = c("Yes", "No"), "correct", c(1,0), "targetPresent", c(TRUE,FALSE), useTwoParameterModel = useTwoParameterModel, params = params, minNperOverlap = 0)#
    ### and plot the data#
    setwd(gpDir)#
    ch.moralsPlotFitsByGrps(grpFitModels, c("QuantOption1", "QuantOption2"), "overlapRound", analysisReadyData.gp, filenameID = params$dt.set)#
    ch.moralsPlotFitsByGrps(grpFitModels.2, c("HVOq", "LVOq"), "overlapRound", analysisReadyData.gp, filenameID = params$dt.set)#
    setwd(mainDir)

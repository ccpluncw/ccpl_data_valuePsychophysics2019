require(h20)
require(h2o)
h2o.shutdown()
h2o.init(nthreads = -1)
h2o.shutdown()
h2o.init(nthreads = -1)
train_file <- "https://h2o-public-test-data.s3.amazonaws.com/bigdata/laptop/mnist/train.csv.gz"test_file <- "https://h2o-public-test-data.s3.amazonaws.com/bigdata/laptop/mnist/test.csv.gz"
train <- h2o.importFile(train_file) #
test <- h2o.importFile(test_file)
y <- "C785"#
x <- setdiff(names(train), y)
train[,y] <- as.factor(train[,y])test[,y] <- as.factor(test[,y])
model <- h2o.deeplearning(x = x, y = y, training_frame = train, validation_frame = test, distribution = "multinomial", activation = "RectifierWithDropout", hidden = c(200,200,200), input_dropout_ratio = 0.2, l1 = 1e-5, epochs = 10)
h2o.performance(model, train = TRUE) # training set metrics
h2o.performance(model, valid = TRUE) # validation set metrics # Get MSE onlyh2o.mse(model, valid = TRUE) # Cross-validated MSEh2o.mse(model_cv, xval = TRUE)
h2o.mse(model, xval = TRUE)
h2o.shutdown()
rnorm
dnorm(0)
v1 <- c(1, 2, 3)
v1
M = matrix( c(1, "a", 3, 4, "b", "c"), nrow=2, ncol=3, byrow=TRUE)
M
M+2
M[1,1}=1]
M[1,1]+1
x <- 30
if(is.integer(x)) {}
if(is.integer(x)) {print ("X is an integer")}
if(is.integer(x)) {print("X is an integer")}
x<-30L
if(is.integer(x)) {print("X is an integer")}
v <- c(3, 7, 5, 8)
x <- 1
t <- 1
if(v[x])
if(v[x] > v[x+1]) {}
smallest <- v[1]
if(smalllest > v[2]) {smallest <- v[2]}
if(smallest > v[2]) {smallest <- v[2]}
smallest
if(smallest > v[3]0 {smallest <- v[3]}
if(smallest > v[3]) {smallest <- v[3]}
if(sma)
if(smallest > v[4]) {smallest <- v[4]}
if(smallest > v[5]) {smallest <- v[5]}
v <- c(7, 2, 5, 9, 10)
if(smallest > v[2]) {smallest <- v[2]}
if(smallest > v[3]) {smallest <- v[3]}
if(smallest > v[4]) {smallest <- v[4]}
if(smallest > v[5]) {smallest <- v[5]}
smallest
x <- 1#
first <- 10#
v <- c(4, 6, 2, 7)#
while(x<5) {#
  if(first>v[x]) {#
    first <- v[x]#
  } #
  x=x+1#
}#
s <- 1#
while (v[s] != first) {#
  s+1#
}#
s#
p = v[1]#
v[1] = first#
v[s] = p
s
source("vectloop.r", echo=T)
source("vectLoop.r", echo=T)
library(chutils)
ch.newdir()
xx <- <- getwd()
xx <- getwd()
ch.newDir(xx, "Music")
library(chutils)
ch.updateRpackage (packageName = "chMorals")
ch.updateRpackage (packageName = "RRW")
ch.updateRpackage (packageName = "chValues")
ch.updateRpackage (packageName = "smartGridSearch")
ch.updateRpackage (packageName = "QCEB")
ch.updateRpackage (packageName = "chutils")
library(chutils)
ch.pHOVfit
ch.pHOVFit
ch.pHVOfit
ch.round_any
libary(chutils)
library(chutils)
ch.round_any
source("runRRW_PeopleVarNum.r")
